#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
=begin
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have 
over five hundred divisors?
=end
def factor_number(n)
    if n == 1
        return 1
    end
    num = 2
    2.upto Math.sqrt(n).to_i do |div|
        if n % div == 0
            num += 2
        end
    end
    return num
end

def triangle_num(n)
    return n*(n-1) / 2
end

def smallest_500_factors
    n = 1
    tri = triangle_num(n)
    fact = factor_number(tri)
    while fact < 500
        n += 1
        tri = triangle_num(n)
        fact = factor_number(tri)
    end
    p tri
end

smallest_500_factors
